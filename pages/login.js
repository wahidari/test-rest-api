import { useContext, useState } from "react";
import { GlobalContext } from "@utils/GlobalContext";
import Router from "next/router";
import Head from 'next/head'
import axios from 'axios';
import Input from '@components/Input';
import Button from '@components/Button';
import nookies from 'nookies';
import InputPassword from "@components/InputPassword";

export default function Login() {
  const { darkMode, setDarkMode } = useContext(GlobalContext);
  const [input, setInput] = useState(
    { email: "", password: "" }
  )
  const [error, setError] = useState()
  const [success, setSuccess] = useState()

  function handleChange(e) {
    setInput({
      ...input,
      [e.target.name]: e.target.value
    })
  }

  async function handleSubmit(e) {
    e.preventDefault();
    // console.log(input)
    try {
      const { data } = await axios.post('https://mitramas-test.herokuapp.com/auth/login', input);
      // console.log(data)
      if (data.access_token) {
        setSuccess("Success Login")
        setError("")
        nookies.set(null, 'token', data.access_token, { path: '/'})
        Router.replace("/");
      } else {
        setSuccess("")
        setError("Error Login")
      }
    } catch (error) {
      setError(error.response.statusText)
      Router.reload();
      console.log(error);
    }
  }

  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="bg-slate-50 dark:bg-neutral-900 min-h-screen p-8 md:p-12">

        <div className="max-w-lg mx-auto">

          <section className="text-gray-700 body-font py-8 max-w-sm mx-auto">
            <h1 className="text-center font-medium text-3xl dark:text-white mb-4">Login</h1>
            <Input onChange={handleChange} label="Email" name="email" placeholder="Email" type="text" />
            <InputPassword onChange={handleChange} label="Password" name="password" placeholder="Password" />
            <Button onClick={handleSubmit} className="w-full">Login</Button>
            {error && <p className="text-red-500 text-center mt-4 text-sm font-medium">{error}</p>}
            {success && <p className="text-green-500 text-center mt-4 text-sm font-medium">{success}</p>}
          </section>
          <div onClick={() => setDarkMode(!darkMode)} className="transition-all cursor-pointer w-10 h-6 dark:bg-blue-500 bg-neutral-200 rounded-full relative mx-auto">
            <div className="h-4 w-4 bg-white rounded-full absolute top-1 transition-all dark:left-5 left-1"></div>
          </div>

        </div>

      </main>

    </>
  )
}

export async function getServerSideProps(context) {
  // Parse
  const cookies = nookies.get(context)

  if (cookies.token) {
    return {
      redirect: {
        destination: "/"
      }
    }
  }

  return {
    props: {
    }
  }
}